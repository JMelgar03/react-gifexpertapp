{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAjBW,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,a,+BCPfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEhBC,EAFgB,iDAEgCC,UAAUH,GAF1C,+DAGHI,MAAMF,GAHH,cAGhBG,EAHgB,gBAIDA,EAAKC,OAJJ,uBAIfC,EAJe,EAIfA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVpB,kBAafM,GAbe,4CAAH,sDCCVO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAKhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAqBtC,OAfAC,qBAAU,WACHxB,EAAQC,GACLwB,MAAK,SAAAC,GAEHH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAKlB,CAACpB,IAIDqB,EDfwBK,CAAa1B,GAAhCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAQpB,OACI,qCACA,6BAAMpB,IAELoB,GAAW,4CAEZ,qBAAKJ,UAAU,YAAf,SAIQH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aExBlBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,WAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEE,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACAA,SAAWA,GACLA,Y,MCnB9B6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0657c4b8.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleOnchance = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [  inputValue, ...cats  ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange= { handleOnchance }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n   export const getGifs = async( category ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=TC2RFpgSpzKcz8TKAOns7FfcP2YAAIUK`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json(); \r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    //console.log(id, title, url);\r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n   const { data:images, loading} = useFetchGifs(category);\r\n    \r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     .then(setImages);\r\n    // }, [category])\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h2>{ category }</h2>\r\n        \r\n        {loading && <p>Cargando...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n            {\r\n                \r\n                images.map( img =>( \r\n                \r\n                    <GifGridItem \r\n                    key = {img.id}\r\n                    {...img} \r\n                    />\r\n\r\n                ))\r\n                \r\n            }\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n           getGifs(category)\r\n             .then(imgs => {\r\n                \r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n\r\n        })\r\n\r\n        }, [category])\r\n\r\n    \r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    //const handdleAdd = () =>{\r\n      //  setCategories([...categories,'Naruto'])\r\n    //}\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>\r\n          <AddCategory setCategories={ setCategories }/>  \r\n\r\n          <hr/ >  \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>( \r\n                        <GifGrid \r\n                        category={ category } \r\n                        key={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}